local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()
local destroyEnabled = false -- Переменная для хранения состояния переключателя

local function onRightClick(input, gameProcessedEvent)
    print("Right click detected") -- Отладочное сообщение
    if gameProcessedEvent then
        print("Game processed event, returning") -- Отладочное сообщение
        return
    end

    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        print("MouseButton2 detected") -- Отладочное сообщение
        if destroyEnabled then
            local target = mouse.Target
            if target then
                print("Destroying target") -- Отладочное сообщение
                target:Destroy()
            end
        else
            print("Destroying disabled") -- Отладочное сообщение
        end
    end
end

UserInputService.InputBegan:Connect(onRightClick)

local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
	Name = "destroyer parts by KIRI",
	LoadingTitle = "Rayfield Interface Suite",
	LoadingSubtitle = "by Sirius",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "Rayfield Interface Suite",
		FileName = "Big Hub"
	},
	KeySystem = false, -- Set this to true to use their key system
	KeySettings = {
		Title = "Sirius Hub",
		Subtitle = "Key System",
		Note = "Join the discord (discord.gg/sirius)",
		SaveKey = true,
		Key = "ABCDEF"
	}
})

Rayfield:Notify("Title Example", "Content/Description Example", 4483362458) -- Notfication -- Title, Content, Image

local Tab = Window:CreateTab("Tab Example", 4483362458) -- Title, Image

local Section = Tab:CreateSection("Staff")

local Toggle = Tab:CreateToggle({
	Name = "Destroyer part",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		print("Toggle value changed: ", Value) -- Отладочное сообщение
		destroyEnabled = Value -- Обновляем значение переменной destroyEnabled
	end,
})
